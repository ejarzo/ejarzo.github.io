{"version":3,"sources":["webpack:///./src/pages/abacusynth.js"],"names":["bannerImage","title","links","label","href","Content","target","src","width","height","frameborder","allow","allowfullscreen"],"mappings":"qJAKe,qBAAO,IACZA,EADW,OACXA,YAYR,OACE,6BACE,kBAAC,IAAD,CACEC,MAAM,aACND,YAAaA,EACbE,MAAO,CACL,CAAEC,MAAO,aAAcC,KAAM,kCAC7B,CACED,MAAO,cACPC,KAAM,yCAGVC,QAAS,kBACP,6BACE,iCACM,IACJ,uBAAGD,KAAK,kCAAkCE,OAAO,SAAjD,cAEK,IAJP,4BAK4B,IAC1B,uBAAGF,KAAK,uCAAuCE,OAAO,SAAtD,UANF,KAWA,2BACE,4BACEL,MAAM,kBACNM,IAAI,wDACJC,MAAM,OACNC,OAAO,MACPC,YAAY,IACZC,MAAM,uBACNC,iBAAe,KAGnB,iTAOA,0CACA,+qB","file":"component---src-pages-abacusynth-js-9645574f6d4dae765948.js","sourcesContent":["import React from 'react';\nimport ProjectPage from '../components/ProjectPage';\nimport { useStaticQuery, graphql } from 'gatsby';\n// import Img from 'gatsby-image';\n\nexport default () => {\n  const { bannerImage } = useStaticQuery(graphql`\n    query {\n      bannerImage: file(relativePath: { eq: \"abacusynth-banner.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2400, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <div>\n      <ProjectPage\n        title=\"Abacusynth\"\n        bannerImage={bannerImage}\n        links={[\n          { label: 'Visit Site', href: 'https://abacusynth.netlify.app' },\n          {\n            label: 'View Source',\n            href: 'https://github.com/ejarzo/abacusynth',\n          },\n        ]}\n        Content={() => (\n          <div>\n            <p>\n              The{' '}\n              <a href=\"https://abacusynth.netlify.app/\" target=\"blank\">\n                Abacusynth\n              </a>{' '}\n              is a synth inspired by an{' '}\n              <a href=\"https://en.wikipedia.org/wiki/Abacus\" target=\"blank\">\n                abacus\n              </a>\n              .\n            </p>\n            <p>\n              <iframe\n                title=\"Abacusynth Demo\"\n                src=\"https://player.vimeo.com/video/517974442?color=eae6de\"\n                width=\"100%\"\n                height=\"700\"\n                frameborder=\"0\"\n                allow=\"autoplay; fullscreen\"\n                allowfullscreen\n              ></iframe>\n            </p>\n            <p>\n              The interaction is centered on placing shapes on rods. Each rod is\n              set to a frequency in the harmonic series, and each shape\n              represents an oscillator oscillating at that frequency. The\n              different shapes represent the oscillator's wave type (sine,\n              square, triangle, sawtooth).\n            </p>\n            <h3>How to use</h3>\n            <p>\n              Place shapes on the rods to start producing sound. Shapes on the\n              lowest rod produce the fundamental frequency. You can change the\n              note by pressing the keys `asdfghjk`. Drag shapes will move them\n              from left to right or from rod to rod. If holding the ALT or\n              OPTION key on your keyboard, dragging a shape adjusts it's vibrato\n              rate (dragging up/down) and depth(dragging right/left). This will\n              cause the shape to move on the rod. If holding the SHIFT key,\n              dragging adjusts the shape's size panning speed which correspond\n              to the sound's volume and panning speed, respectively. Click\n              \"Randomize\" will clear the current state and randomly generate\n              shapes.\n            </p>\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n"],"sourceRoot":""}