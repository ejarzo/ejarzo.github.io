{"version":3,"sources":["webpack:///./src/pages/drum-radar.js"],"names":["bannerImage","title","links","label","href","Content","target","src","width","height","frameborder","allow","allowfullscreen"],"mappings":"gxCAKe,qBAAO,IACZA,EADW,OACXA,YAWR,OACE,6BACE,kBAAC,IAAD,CACEC,MAAM,aACND,YAAaA,EACbE,MAAO,CACL,CAAEC,MAAO,aAAcC,KAAM,kCAC7B,CACED,MAAO,cACPC,KAAM,yCAGVC,QAAS,kBACP,6BACE,iCACM,IACJ,uBAAGD,KAAK,kCAAkCE,OAAO,SAAjD,cAEK,IAJP,mEAOA,2BACE,4BACEL,MAAM,qBACNM,IAAI,wDACJC,MAAM,OACNC,OAAO,MACPC,YAAY,IACZC,MAAM,uBACNC,iBAAe,KAGnB","file":"component---src-pages-drum-radar-js-b446f43936d5a27e4055.js","sourcesContent":["import React from 'react';\nimport ProjectPage from '../components/ProjectPage';\nimport { useStaticQuery, graphql } from 'gatsby';\n// import Img from 'gatsby-image';\n\nexport default () => {\n  const { bannerImage } = useStaticQuery(graphql`\n    query {\n      bannerImage: file(relativePath: { eq: \"drum-radar-banner-2.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2400) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <div>\n      <ProjectPage\n        title=\"Drum Radar\"\n        bannerImage={bannerImage}\n        links={[\n          { label: 'Visit Site', href: 'https://drum-radar.netlify.app' },\n          {\n            label: 'View Source',\n            href: 'https://github.com/ejarzo/drum-radar',\n          },\n        ]}\n        Content={() => (\n          <div>\n            <p>\n              The{' '}\n              <a href=\"https://drum-radar.netlify.app/\" target=\"blank\">\n                Drum Radar\n              </a>{' '}\n              is a drum machine that visualizes rhythm as circles and spokes.\n            </p>\n            <p>\n              <iframe\n                title=\"Triangle Animation\"\n                src=\"https://player.vimeo.com/video/505089921?color=eae6de\"\n                width=\"100%\"\n                height=\"700\"\n                frameborder=\"0\"\n                allow=\"autoplay; fullscreen\"\n                allowfullscreen\n              ></iframe>\n            </p>\n            <p>\n              Each drum track plays at constant rate in a circle, ‘hitting’\n              spokes as it passes to trigger its sample. For each drum sound you\n              can control how big its radius is (how long the loop lasts) and\n              how many divisions it has (how many times it will play during that\n              loop). This allows for some interesting combinations of synced and\n              freeform polyrhythms.\n            </p>\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n"],"sourceRoot":""}