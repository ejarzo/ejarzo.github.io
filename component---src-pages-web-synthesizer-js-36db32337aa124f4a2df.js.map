{"version":3,"sources":["webpack:///./src/pages/web-synthesizer.js"],"names":["bannerImage","title","links","label","href","Content","src","width","height","frameborder","allow","allowfullscreen"],"mappings":"sJAIe,qBAAO,IACZA,EADW,OACXA,YAWR,OACE,6BACE,kBAAC,IAAD,CACEC,MAAM,kBACND,YAAaA,EACbE,MAAO,CACL,CACEC,MAAO,UACPC,KAAM,sCAER,CACED,MAAO,UACPC,KAAM,yDAER,CACED,MAAO,cACPC,KAAM,6CAGVC,QAAS,kBACP,6BACE,2CACA,kCACO,IACL,uBAAGD,KAAK,sCAAR,yBAEK,IAJP,oRAWA,2BACE,4BACEH,MAAM,qBACNK,IAAI,wDACJC,MAAM,OACNC,OAAO,MACPC,YAAY,IACZC,MAAM,uBACNC,iBAAe,KAGnB,wGAEY,IACV,uBAAGP,KAAK,8CAAR,YAHF,8SAUA,iYASA,2CACA,gCACK,IACH,uBAAGA,KAAK,yDAAR,wBAEK,IAJP,oPAUA,2BACE,4BACEH,MAAM,qBACNK,IAAI,wDACJC,MAAM,OACNC,OAAO,MACPC,YAAY,IACZC,MAAM,uBACNC,iBAAe,KAGnB,kGAEU,IACR,uBAAGP,KAAK,4CAAR,+BAEK,IALP,8S","file":"component---src-pages-web-synthesizer-js-36db32337aa124f4a2df.js","sourcesContent":["import React from 'react';\nimport ProjectPage from '../components/ProjectPage';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nexport default () => {\n  const { bannerImage } = useStaticQuery(graphql`\n    query {\n      bannerImage: file(relativePath: { eq: \"additive-synth-banner-2.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2400) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <div>\n      <ProjectPage\n        title=\"Web Synthesizer\"\n        bannerImage={bannerImage}\n        links={[\n          {\n            label: 'Play V1',\n            href: 'https://additive-synth.netlify.app',\n          },\n          {\n            label: 'Play V2',\n            href: 'https://deploy-preview-1--additive-synth.netlify.app/',\n          },\n          {\n            label: 'View Source',\n            href: 'https://github.com/ejarzo/additive-synth',\n          },\n        ]}\n        Content={() => (\n          <div>\n            <h3>Iteration 1</h3>\n            <p>\n              This{' '}\n              <a href=\"https://additive-synth.netlify.app\">\n                Web-based Synthesizer\n              </a>{' '}\n              allows you to experiment with timbre in the browser. It consists\n              of four oscillators and one noise source, each routed to its own\n              amplitude envelope. Oscillator 1 also controls the overall\n              envelope - all other oscillators (including noise) are routed\n              through Oscillator 1.\n            </p>\n            <p>\n              <iframe\n                title=\"Triangle Animation\"\n                src=\"https://player.vimeo.com/video/505003030?color=eae6de\"\n                width=\"100%\"\n                height=\"520\"\n                frameborder=\"0\"\n                allow=\"autoplay; fullscreen\"\n                allowfullscreen\n              ></iframe>\n            </p>\n            <p>\n              I wanted to replicate one of my favorite features of synths like\n              Ableton’s{' '}\n              <a href=\"https://www.ableton.com/en/packs/operator/\">Operator</a>—\n              the ability to loop envelopes, letting you create detailed\n              rhythmic textures. In addition to the base harmonic, volume,\n              detune, wave type (sine, triangle, square, or sawtooth) and ADSR\n              envelope, each oscillator also has a loop control, which\n              determines the interval at which the envelope repeats.\n            </p>\n            <p>\n              Since the focus was on timbre, I only added limited options for\n              controlling the notes being played. The synth plays a sequence of\n              7th chord arpeggios in a set scale that can be changed by moving\n              the mouse left and right. You can also change the octave by\n              pressing Z and X. There are three “voices” meaning that three\n              notes can be played at the same time.\n            </p>\n\n            <h3>Iteration 2</h3>\n            <p>\n              In{' '}\n              <a href=\"https://deploy-preview-1--additive-synth.netlify.app/\">\n                an alternate version\n              </a>{' '}\n              I added visualization and control over the synth’s tuning. Each\n              oscillator’s waveform is graphed in a circle. Since all\n              oscillators route through the first oscillator, the top left graph\n              represents the sum of all four - the output waveform.\n            </p>\n            <p>\n              <iframe\n                title=\"Triangle Animation\"\n                src=\"https://player.vimeo.com/video/468989364?color=eae6de\"\n                width=\"100%\"\n                height=\"520\"\n                frameborder=\"0\"\n                allow=\"autoplay; fullscreen\"\n                allowfullscreen\n              ></iframe>\n            </p>\n            <p>\n              You can control three synth voices to make chords and switch\n              between{' '}\n              <a href=\"https://pages.mtu.edu/~suits/scales.html\">\n                Just and Equal temperaments\n              </a>{' '}\n              to see and hear how they are different. It is especially\n              noticeable on the tonic chord, in this case A Major. There are\n              audible pulses with Equal temperament, whereas Just temperament\n              produces a smooth harmony. You can clearly see this in the graphs\n              as they go from fluctuating to very even.\n            </p>\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n"],"sourceRoot":""}