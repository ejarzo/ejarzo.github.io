{"version":3,"sources":["webpack:///./src/pages/musical-garden.js"],"names":["bannerImage","plantTypesImage","groundImage","title","links","label","href","Content","target","src","width","height","frameborder","allow","allowfullscreen","style","maxWidth","fluid","childImageSharp","alt"],"mappings":"otIAKe,qBAAO,IAAD,SACXA,EADW,EACXA,YAAaC,EADF,EACEA,gBAAiBC,EADnB,EACmBA,YA2BtC,OACE,6BACE,kBAAC,IAAD,CACEC,MAAM,iBACNH,YAAaA,EACbI,MAAO,CACL,CAAEC,MAAO,aAAcC,KAAM,sCAC7B,CACED,MAAO,cACPC,KAAM,6CAGVC,QAAS,kBACP,6BACE,iCACM,IACJ,uBAAGD,KAAK,sCAAsCE,OAAO,SAArD,kBAEK,IAJP,iFAQA,2BACE,4BACEL,MAAM,+BACNM,IAAI,wDACJC,MAAM,OACNC,OAAO,MACPC,YAAY,IACZC,MAAM,uBACNC,iBAAe,KAGnB,mUAOA,oNAKA,oKAGQ,IACN,uBAAGR,KAAK,0CAAR,aAJF,gHAQA,wEACA,2CACA,2BACE,kBAAC,IAAD,CACES,MAAO,CAAEC,SAAU,KACnBC,MAAOhB,EAAgBiB,gBAAgBD,MACvCE,IAAI,wFAGR,kOAKA,4CACA,gRAMA,2BACE,kBAAC,IAAD,CACEJ,MAAO,CAAEC,SAAU,QACnBC,MAAOf,EAAYgB,gBAAgBD,MACnCE,IAAI,qEAIR,oDACwB,wDAAsC,IAD9D,sMAMA,oDACwB,gDADxB,yNAOA,oDACwB,gDADxB,yMAMA,gDACoB,0DADpB,oOAOA,gDACoB,4DADpB","file":"component---src-pages-musical-garden-js-4021577e12c95b24c4b4.js","sourcesContent":["import React from 'react';\nimport ProjectPage from '../components/ProjectPage';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nexport default () => {\n  const { bannerImage, plantTypesImage, groundImage } = useStaticQuery(graphql`\n    query {\n      bannerImage: file(relativePath: { eq: \"musical-garden-banner-2.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2400) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      plantTypesImage: file(\n        relativePath: { eq: \"musical-garden-plant-types.png\" }\n      ) {\n        childImageSharp {\n          fluid(maxWidth: 400, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      groundImage: file(relativePath: { eq: \"musical-garden-ground.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 2000, quality: 100) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <div>\n      <ProjectPage\n        title=\"Musical Garden\"\n        bannerImage={bannerImage}\n        links={[\n          { label: 'Visit Site', href: 'https://musical-garden.netlify.app' },\n          {\n            label: 'View Source',\n            href: 'https://github.com/ejarzo/musical-garden',\n          },\n        ]}\n        Content={() => (\n          <div>\n            <p>\n              The{' '}\n              <a href=\"https://musical-garden.netlify.app/\" target=\"blank\">\n                Musical Garden\n              </a>{' '}\n              is an experiment in making music by planting and tending to a\n              virtual garden.\n            </p>\n            <p>\n              <iframe\n                title=\"Musical Garden Screencapture\"\n                src=\"https://player.vimeo.com/video/488997563?color=eae6de\"\n                width=\"100%\"\n                height=\"480\"\n                frameborder=\"0\"\n                allow=\"autoplay; fullscreen\"\n                allowfullscreen\n              ></iframe>\n            </p>\n            <p>\n              This web instrument allows you to make music by planting and\n              watering different kinds of “audio seeds” that grow into lush\n              melodies and textures. Watering the seeds causes them to grow both\n              visually and sonically, and distinct areas in the garden cause the\n              plants to behave in different ways.\n            </p>\n            <p>\n              Composing using this interface is more spacial than linear. Plants\n              emanate sound that you navigate through using the mouse, so moving\n              through the space influences the mix of sounds.\n            </p>\n            <p>\n              The implementation represents different types of sound using basic\n              geometric forms and generates growth patterns algorithmically\n              using{' '}\n              <a href=\"https://en.wikipedia.org/wiki/L-system\">L-Systems</a> — a\n              technique for modeling generational systems. These patterns are at\n              times also used to produce melodies.\n            </p>\n            <p>The musical garden invites exploration...</p>\n            <h3>Plant Rules</h3>\n            <p>\n              <Img\n                style={{ maxWidth: 400 }}\n                fluid={plantTypesImage.childImageSharp.fluid}\n                alt=\"Screenshot of four shapes: circle, square, equilateral triangle and right triangle\"\n              />\n            </p>\n            <p>\n              Each seed type represents an oscillator waveform: circle = sine,\n              square = square, equilateral triangle = triangle, right triangle =\n              sawtooth. Each type has its own L-System rules for how to grow.\n            </p>\n            <h3>Ground Rules</h3>\n            <p>\n              Each ground area dictates how the plants should play audio. They\n              define which synth the plant should use (incorporating the base\n              oscillator type) and what to do when the plant is watered. They\n              also attach audio effects specific to that area.\n            </p>\n            <p>\n              <Img\n                style={{ maxWidth: '100%' }}\n                fluid={groundImage.childImageSharp.fluid}\n                alt=\"Screenshot of musical garden ground showing five distinct areas\"\n              />\n            </p>\n\n            <p>\n              Plants growing in the <strong>Brown/Purple Circles</strong>{' '}\n              (bottom left) play melody based on the current L-System Sentence\n              -- `[` means increase the note value and `]` means increase the\n              note value. This means that shorter plants have shorter melodies.\n            </p>\n            <p>\n              Plants growing in the <strong>Blue Squares</strong> (middle) each\n              add a note to a sequence played left to right — the note value is\n              determined by the Y position and the time is determined by the X\n              position. Watering increases note duration and modulates the\n              synth.\n            </p>\n            <p>\n              Plants growing in the <strong>Red Diamonds</strong> (bottom\n              middle) each loop one note on a random (within a set) interval —\n              this generates polyrhythms between different plants. Watering\n              increases the synths decay time and also randomizes the note.\n            </p>\n            <p>\n              Each plant in the <strong>Brown/Yellow Triangles</strong> (right)\n              adds a voice to a chord that changes at random intervals, so all\n              plants in this area are playing one note of the same chord.\n              Watering increases the filter frequency and adds delay once the\n              plant has stopped growing.\n            </p>\n            <p>\n              Each plant in the <strong>Black Squares (The Void)</strong> is\n              assigned a random frequency. Watering adds vibrato and placing a\n              plant changes the vibrato rate for the whole area.\n            </p>\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n"],"sourceRoot":""}